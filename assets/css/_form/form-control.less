.form-control {
  @height: calc(var(--font-size) * var(--line-height) + 1rem + 2px);

  background-color: var(--bg-page); // todo
  border: solid 1px var(--border);
  color: var(--text);
  display: inline-block;
  font-size: var(--font-size);
  min-height: @height;
  padding: 0.5rem;
  transition: background-color .1s, box-shadow .1s, border-color .1s, color .1s;

  @supports (-webkit-overflow-scrolling: touch) {
    // fix zoom-on-focus in iOS
    --font-size: ~'max(16px, var(--font-size))';
    --font-size: 16px;
  }

  input&:not([type]),
  &[type="text"],
  &[type="password"],
  &[type="email"],
  &[type="url"],
  &[type="search"],
  &[type="date"],
  &[type="time"],
  textarea& {
    -webkit-appearance: none; // disable ugly shade on iOS
    border-radius: 0; // disable rounded corners on iOS
  }

  input&:not([type]),
  &[type="text"],
  &[type="password"],
  &[type="email"],
  &[type="url"],
  &[type="search"] {
    max-width: 100%;

    &:not([size]) {
      width: 100%;
    }
  }

  &[type="date"],
  &[type="time"] {
    min-width: 5rem; // fix for iOS
  }

  textarea& {
    max-width: 100%;
    resize: vertical;

    &:not([cols]) {
      width: 100%;
    }
  }

  select&:not([multiple]) {
    -moz-appearence: none;
    -webkit-appearance: none;
    background-image: url('caret-black.svg');
    background-size: 12px 12px;
    background-position: calc(100% - 2px) 50%;
    background-repeat: no-repeat;
    padding-right: 16px;

    .night-mode & {
      background-image: url('caret-white.svg');
    }

    border-radius: 0; // disable rounded corners on iOS

    // dropdown caret doesn't acknowledge min-height
    height: @height;

    // having vertical padding cuts off the text inside. having height set is
    // enough to achieve a padding effect.
    padding-top: 0;
    padding-bottom: 0;
  }

  &:invalid {
    box-shadow: unset; // remove default browser style
  }

  &:focus {
    border-color: var(--primary);
    box-shadow: 0 0 2px 2px var(--primary-alpha);
    outline: none; // remove default browser style
  }

  &[disabled] {
    background-color: var(--bg-grey);
    color: var(--fg-grey);
  }

  &[readonly]:focus {
    border-color: var(--border);
  }
}
